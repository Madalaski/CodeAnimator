using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class ObraDinnCameraScript : MonoBehaviour
{
+++4;    public Material ditherMat;
+++33;    public Material thresholdMat;
+++9;	
+++10;    Camera cam;
    
    // Start is called before the first frame update
    void Start()
    {
        
~~~11;        cam = GetComponent<Camera>();
    }

---0;    // Update is called once per frame
    void Update()
~~~1;    void OnRenderImage(RenderTexture src, RenderTexture dest)
    {
+++28;        RenderTexture large = RenderTexture.GetTemporary(1640, 940);
+++3;        RenderTexture main = RenderTexture.GetTemporary(820, 470);
		
+++14;        Vector3[] corners = new Vector3[4];
+++15;       
+++16;        cam.CalculateFrustumCorners(new Rect(0,0,1,1), cam.farClipPlane,
+++17;            Camera.MonoOrStereoscopicEye.Mono, corners);
+++18;
+++19;        for (int i = 0; i < 4; i++) {
+++20;            corners[i] = transform.TransformVector(corners[i]);
+++21;            corners[i].Normalize();
+++22;        }
+++23;
+++24;        ditherMat.SetVector("_BL", corners[0]);
+++25;        ditherMat.SetVector("_TL", corners[1]);
+++26;        ditherMat.SetVector("_TR", corners[2]);
+++27;        ditherMat.SetVector("_BR", corners[3]);
+++13;
+++5;        Graphics.Blit(src, main, ditherMat);
~~~29;        Graphics.Blit(src, large, ditherMat);
+++31;        Graphics.Blit(large, main);
~~~34;        Graphics.Blit(large, main, thresholdMat);
+++6;        Graphics.Blit(main, dest);
+++7;
+++32;        RenderTexture.ReleaseTemporary(large);
+++8;        RenderTexture.ReleaseTemporary(main);
    }
}
